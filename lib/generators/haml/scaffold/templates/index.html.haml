- content_for(:title, <%= class_name %>.model_name.human(count: 2))
= turbo_frame_tag :<%= plural_table_name %>_index do
  = render(Page::HeaderComponent.new(title: <%= class_name %>.model_name.human(count: 2))) do |header|
    - header.search do
      = render 'search_form', search_path: <%= index_helper %>_path
    - header.action do
      = button_to new_<%= singular_table_name %>_path, class: 'btn-circle btn-circle--primary', method: :get, data: { turbo_frame: 'drawer' } do
        = heroicon 'plus', options: { class: 'btn-circle__icon' }

  .card
    = render(Table::TableComponent.new) do |table|
      - table.header do |header|
<% for attribute in attributes -%>
        - header.col(classes: 'c-table__column flex-1') { <%= class_name %>.human_attribute_name(:<%= attribute.name %>) }
<% end -%>
        - header.col(classes: 'c-table__column--actions')
      - table.body(id: :<%= plural_table_name %>) do
        - if @records.any?
          = render @records
        - elsif params[:q].present?
          = render 'empty_search', clear_path: <%= index_helper %>_path, term: params[:q]
        - else
          = render 'empty_state', add_path: new_<%= singular_table_name %>_path, options: { data: { turbo_frame: 'drawer' } }

  = render(Page::PaginatorComponent.new(paginator: @pagy))
